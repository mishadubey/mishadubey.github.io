{"version":3,"sources":["pages/tasks/wrapper.tsx","pages/tasks/search.tsx","pages/tasks/list.tsx","services/task.ts","pages/tasks/index.tsx","layouts/header/index.tsx","layouts/footer/index.tsx","layouts/index.tsx"],"names":["Wrapper","children","className","Search","useState","dueDateFrom","setDueDateFrom","dueDateTo","setDueDateTo","htmlFor","type","name","id","autoComplete","selected","onChange","date","List","tasks","map","task","status","department","clsx","getUnixTime","Date","dueDate","format","fromUnixTime","axios","get","data","post","put","delete","Tasks","setTaskList","useEffect","TaskService","getTasks","then","response","hideHeader","hideFooter","Header","Footer","Layout","defaultProps"],"mappings":"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","file":"static/js/5.092c9f26.chunk.js","sourcesContent":["import React from 'react';\n\nconst Wrapper: React.FC = ({ children }) => {\n  return (\n    <div className=\"min-h-screen flex flex-col py-6 sm:px-6 lg:px-8\">\n      {children}\n    </div>\n  );\n};\n\nexport default Wrapper;\n","import React, { useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nconst Search: React.FC = () => {\n\n  const [dueDateFrom, setDueDateFrom] = useState<Date | null>();\n  const [dueDateTo, setDueDateTo] = useState<Date | null>();\n\n  return (\n    <div className=\"bg-white overflow-hidden shadow rounded-lg divide-y divide-gray-100\">\n      <div className=\"bg-gray-50 px-4 py-5 sm:px-6\">\n        <h2 className=\"text-xl leading-6 font-medium text-gray-900\">\n          Filters\n        </h2>\n      </div>\n      <div className=\"px-4 py-4 sm:px-6\">\n        <div className=\"grid grid-cols-1 gap-y-6 gap-x-4 sm:grid-cols-12\">\n          <div className=\"sm:col-span-3\">\n            <label htmlFor=\"name\" className=\"block text-sm font-semibold text-gray-700\">\n              Name\n            </label>\n            <div className=\"mt-1\">\n              <input\n                type=\"text\"\n                name=\"name\"\n                id=\"name\"\n                className=\"shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md\"\n              />\n            </div>\n          </div>\n          <div className=\"sm:col-span-3\">\n            <label htmlFor=\"status\" className=\"block text-sm font-semibold text-gray-700\">\n              Status\n            </label>\n            <div className=\"mt-1\">\n              <select\n                id=\"status\"\n                name=\"status\"\n                autoComplete=\"status\"\n                className=\"shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md\"\n              >\n                <option></option>\n                <option>To Do</option>\n                <option>In Progress</option>\n                <option>Internal QA</option>\n                <option>Client Review</option>\n                <option>Done</option>\n              </select>\n            </div>\n          </div>\n          <div className=\"sm:col-span-3\">\n            <label htmlFor=\"zip\" className=\"block text-sm font-semibold text-gray-700\">\n              Due Date (From)\n            </label>\n            <div className=\"mt-1\">\n              <DatePicker\n                selected={dueDateFrom}\n                onChange={(date: Date | null) => setDueDateFrom(date)}\n                className=\"shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md\"\n              />\n            </div>\n          </div>\n          <div className=\"sm:col-span-3\">\n            <label className=\"block text-sm font-semibold text-gray-700\">\n              Due Date (To)\n            </label>\n            <div className=\"mt-1\">\n              <DatePicker\n                selected={dueDateTo}\n                onChange={(date: Date | null) => setDueDateTo(date)}\n                className=\"shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md\"\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"mt-6 pt-6 border-t border-gray-200\">\n          <div className=\"flex justify-center\">\n            <button\n              type=\"button\"\n              className=\"bg-white py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n            >\n              Clear\n            </button>\n            <button\n              type=\"submit\"\n              className=\"ml-3 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n            >\n              Apply\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Search;\n","import React from 'react';\nimport ITask from '../../types/task';\nimport format from 'date-fns/format';\nimport fromUnixTime from 'date-fns/fromUnixTime';\nimport getUnixTime from 'date-fns/getUnixTime';\nimport clsx from 'clsx';\nimport { Users, Clock } from 'react-feather';\n\ninterface IProps {\n  tasks: Array<ITask>;\n}\n\nconst List: React.FC<IProps> = ({ tasks }) => {\n  return (\n    <div className=\"mt-8 bg-white overflow-hidden shadow rounded-lg divide-y divide-gray-100\">\n      <div className=\"bg-gray-50 px-4 py-5 sm:px-6\">\n        <h2 className=\"text-xl leading-6 font-medium text-gray-900\">\n          Results\n        </h2>\n      </div>\n      <div className=\"px-4 py-4 sm:px-6\">\n        <ul className=\"grid grid-cols-1 gap-4 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4\">\n          {tasks.map((task: ITask) => (\n            <li key={task.id} className=\"col-span-1 bg-white rounded-lg shadow divide-y divide-gray-200 hover:bg-gray-50\">\n              <div className=\"px-4 py-4 sm:px-6\">\n                <div className=\"flex items-center justify-between\">\n                  <p className=\"text-sm font-semibold text-gray-700 truncate\">\n                    {task.name}\n                  </p>\n                  <div className=\"ml-2 flex-shrink-0 flex\">\n                      <span className=\"inline-flex items-center px-2 py-0.5 rounded text-xs font-medium bg-blue-100 text-blue-800\">\n                        {task.status}\n                      </span>\n                  </div>\n                </div>\n                <div className=\"mt-2 sm:flex sm:justify-between\">\n                  <div className=\"sm:flex\">\n                    <p className=\"flex items-center text-sm text-gray-500\">\n                      <Users className=\"flex-shrink-0 mr-1.5 h-5 w-5 text-gray-400\" />\n                      {task.department}\n                    </p>\n                  </div>\n                  <div className=\"mt-2 flex items-center text-sm text-gray-500 sm:mt-0\">\n                    <Clock className={clsx(\n                      'flex-shrink-0 mr-1.5 h-5 w-5',\n                      getUnixTime(new Date()) > task.dueDate\n                        ? 'text-red-400'\n                        : 'text-green-400'\n                    )} />\n                    <p>\n                      {format(fromUnixTime(task.dueDate), 'MMM d, yyyy')}\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default List;\n","import ITask from '../types/task';\r\nimport axios from 'axios';\r\n\r\nclass TaskService {\r\n  getTasks() {\r\n    return axios.get<ITask[]>('/api/tasks');\r\n  }\r\n\r\n  getTask(id: string) {\r\n    return axios.get(`/api/tasks/${id}`);\r\n  }\r\n\r\n  createTask(data: ITask) {\r\n    return axios.post('/api/tasks', data);\r\n  }\r\n\r\n  updateTask(data: ITask, id: any) {\r\n    return axios.put(`/api/tasks/${id}`, data);\r\n  }\r\n\r\n  deleteTask(id: any) {\r\n    return axios.delete(`/api/tasks/${id}`);\r\n  }\r\n}\r\n\r\nexport default new TaskService();\r\n","import React, { useEffect, useState } from 'react';\nimport Layout from '../../layouts';\nimport Wrapper from './wrapper';\nimport Search from './search';\nimport List from './list';\nimport TaskService from '../../services/task';\nimport ITask from '../../types/task';\n\nconst Tasks: React.FC = () => {\n\n  const [tasks, setTaskList] = useState<ITask[]>([]);\n\n  useEffect(() => {\n    TaskService.getTasks()\n      .then(response => {\n        setTaskList(response.data);\n      });\n  }, []);\n\n  return (\n    <Layout hideHeader hideFooter>\n      <Wrapper>\n        <Search />\n        <List tasks={tasks} />\n      </Wrapper>\n    </Layout>\n  );\n};\n\nexport default Tasks;\n","import React from 'react';\n\nconst Header: React.FC = () => {\n  return <></>\n};\n\nexport default Header;\n","import React from 'react';\n\nconst Footer: React.FC = () => {\n    return <></>\n};\n\nexport default Footer;\n","import React from 'react';\nimport Header from './header';\nimport Footer from './footer';\n\ninterface IProps {\n  hideHeader?: boolean;\n  hideFooter?: boolean;\n}\n\nconst Layout: React.FC<IProps> = ({\n  children,\n  hideHeader,\n  hideFooter,\n}) => {\n  return (\n    <>\n      {!hideHeader && <Header />}\n      {children}\n      {!hideFooter && <Footer />}\n    </>\n    );\n};\n\nLayout.defaultProps = {\n  hideHeader: false,\n  hideFooter: false,\n};\n\nexport default Layout;\n"],"sourceRoot":""}